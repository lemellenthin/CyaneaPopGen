%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.7
%%CreationDate: Thu Feb  1 22:25:40 2024
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGUAAUAUGAGUUUAAUAUAAAAUAAAAUUUUUGGGGGGUAACAAUAGGUCAUUUAUUAGA\
) def
/coor [
[105.43888092 219.79063416]
[101.81232452 213.01007080]
[105.03963470 204.03570557]
[105.03963470 189.03570557]
[105.03963470 174.03570557]
[105.03963470 159.03570557]
[105.03963470 144.03570557]
[86.83521271 141.06942749]
[71.90078735 131.12506104]
[62.67645264 116.32392120]
[60.46092606 99.53125000]
[45.76797485 96.51177216]
[31.07502747 93.49229431]
[16.38207817 90.47281647]
[3.32552290 99.37797546]
[-12.18802166 96.36044312]
[-20.95464516 83.21047211]
[-17.77326393 67.72969818]
[-4.53133774 59.10259247]
[10.91493511 62.44746780]
[19.40155602 75.77986145]
[34.09450531 78.79933929]
[48.78745270 81.81881714]
[63.48040390 84.83829498]
[70.17158508 74.04188538]
[79.94058228 65.92393494]
[91.77939606 61.32210159]
[104.46644592 60.71120834]
[108.95689392 46.39912033]
[113.44734192 32.08703232]
[104.87482452 19.00857925]
[106.76589203 3.48576045]
[118.22763824 -7.15202188]
[133.84817505 -7.88193321]
[146.25196838 1.64066863]
[149.58232117 16.91950226]
[142.26673889 30.74036980]
[127.75942993 36.57748032]
[123.26898193 50.88956833]
[118.77854156 65.20166016]
[126.60667419 69.83168030]
[133.29042053 76.22589874]
[138.43203735 84.10066986]
[141.70426941 93.08280182]
[142.87042236 102.72711182]
[141.80009460 112.53841400]
[138.47955322 121.99695587]
[152.26391602 127.91229248]
[168.47589111 125.44165039]
[178.50885010 138.41360474]
[172.04174805 153.48373413]
[155.72738647 155.14916992]
[146.34858704 141.69665527]
[132.56420898 135.78132629]
[120.03963470 144.03570557]
[120.03963470 159.03570557]
[120.03963470 174.03570557]
[120.03963470 189.03570557]
[120.03963470 204.03570557]
[120.41962433 219.03089905]
[123.58303833 238.15267944]
] def
/pairs [
[1 60]
[3 59]
[4 58]
[5 57]
[6 56]
[7 55]
[11 24]
[12 23]
[13 22]
[14 21]
[28 40]
[29 39]
[30 38]
[47 54]
[48 53]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
